traffic_intensity = rbind(traffic_intensity, traffic_intensity_new)
traffic_speed = rbind(traffic_speed, traffic_speed_new)
}
x=1
}
remove(stations_new, traffic_intensity_new, traffic_speed_new)
#clean the datasets
stations = stations[!is.na(stations$...3),]
#clean the datasets
stations = stations[!is.na(stations$Naam),]
stations = stations[stations$Volgnummer != "Volgnummer",]
View(stations)
View(traffic_intensity)
traffic_intensity = traffic_intensity[!is.na(traffic_intensity$Intensiteit),]
traffic_speed = traffic_speed[!is.na(traffic_speed$`Gemiddelde snelheid`),]
int_intensity=0
int_speed = 0
traffic_intensity$station = ""
traffic_speed$station = ""
for(id in stations$ID){
traffic_intensity$station[(1+int_intensity):(27+int_intensity)] = id
traffic_speed$station[(1+int_speed):(26+int_speed)] = id
int_intensity = int_intensity+27
int_speed = int_speed + 26
}
traffic_intensity = traffic_intensity[!is.na(traffic_intensity$Intensiteit),]
traffic_intensity = traffic_intensity[traffic_intensity$`uur op de dag` != "uur op de dag",]
traffic_speed = traffic_speed[!is.na(traffic_speed$`Gemiddelde snelheid`),]
traffic_speed = traffic_speed[traffic_speed$`uur op de dag` != "uur op de dag",]
traffic_stats = merge(traffic_intensity, traffic_speed, by = c("uur op de dag", "station"), all.x = T)
colnames(stations)[2] = "station"
traffic_stats = merge(traffic_stats, stations, by = "station", all.x = T)
colnames(traffic_stats)[c(2,3,10)] = c("hour", "traffic_volume", "mean_traffic_speed")
traffic_stats = traffic_stats[order(traffic_stats$station, traffic_stats$hour),]
View(traffic_stats)
View(traffic_speed)
View(traffic_intensity)
View(traffic_stats)
View(stations)
files = list.files(path = destination_folder, pattern = "*.xlsx", all.files = FALSE,
full.names = FALSE, recursive = FALSE,
ignore.case = FALSE, include.dirs = FALSE, no.. = FALSE)
x = 0
for(file in files){
if(x == 0){
stations = read_excel(file, sheet = 1)
colnames(stations) = stations[5,]
traffic_intensity = read_excel(file, sheet = 2)
colnames(traffic_intensity) = traffic_intensity[4,]
traffic_speed = read_excel(file, sheet = 3)
colnames(traffic_speed) = traffic_speed[4,]
}
else{
stations_new = read_excel(file, sheet = 1)
colnames(stations_new) = stations_new[5,]
traffic_intensity_new = read_excel(file, sheet = 2)
colnames(traffic_intensity_new) = traffic_intensity_new[4,]
traffic_speed_new = read_excel(file, sheet = 3)
colnames(traffic_speed_new) = traffic_speed_new[4,]
stations = rbind(stations, stations_new)
traffic_intensity = rbind(traffic_intensity, traffic_intensity_new)
traffic_speed = rbind(traffic_speed, traffic_speed_new)
}
x=1
}
View(stations)
remove(stations_new, traffic_intensity_new, traffic_speed_new)
#clean the datasets
stations = stations[!is.na(stations$Naam),]
stations = stations[stations$Volgnummer != "Volgnummer",]
traffic_intensity = traffic_intensity[!is.na(traffic_intensity$Intensiteit),]
traffic_speed = traffic_speed[!is.na(traffic_speed$`Gemiddelde snelheid`),]
int_intensity=0
int_speed = 0
traffic_intensity$station = ""
traffic_speed$station = ""
View(traffic_intensity)
for(file in files){
if(x == 0){
stations = read_excel(file, sheet = 1)
colnames(stations) = stations[5,]
traffic_intensity = read_excel(file, sheet = 2)
colnames(traffic_intensity) = traffic_intensity[4,]
traffic_speed = read_excel(file, sheet = 3)
colnames(traffic_speed) = traffic_speed[4,]
}
else{
stations_new = read_excel(file, sheet = 1)
colnames(stations_new) = stations_new[5,]
traffic_intensity_new = read_excel(file, sheet = 2)
colnames(traffic_intensity_new) = traffic_intensity_new[4,]
traffic_speed_new = read_excel(file, sheet = 3)
colnames(traffic_speed_new) = traffic_speed_new[4,]
stations = rbind(stations, stations_new)
traffic_intensity = rbind(traffic_intensity, traffic_intensity_new)
traffic_speed = rbind(traffic_speed, traffic_speed_new)
}
x=1
}
x = 0
for(file in files){
if(x == 0){
stations = read_excel(file, sheet = 1)
colnames(stations) = stations[5,]
traffic_intensity = read_excel(file, sheet = 2)
colnames(traffic_intensity) = traffic_intensity[4,]
traffic_speed = read_excel(file, sheet = 3)
colnames(traffic_speed) = traffic_speed[4,]
}
else{
stations_new = read_excel(file, sheet = 1)
colnames(stations_new) = stations_new[5,]
traffic_intensity_new = read_excel(file, sheet = 2)
colnames(traffic_intensity_new) = traffic_intensity_new[4,]
traffic_speed_new = read_excel(file, sheet = 3)
colnames(traffic_speed_new) = traffic_speed_new[4,]
stations = rbind(stations, stations_new)
traffic_intensity = rbind(traffic_intensity, traffic_intensity_new)
traffic_speed = rbind(traffic_speed, traffic_speed_new)
}
x=1
}
remove(stations_new, traffic_intensity_new, traffic_speed_new)
#clean the datasets
stations = stations[!is.na(stations$Naam),]
stations = stations[stations$Volgnummer != "Volgnummer",]
traffic_intensity = traffic_intensity[!is.na(traffic_intensity$Intensiteit),]
traffic_speed = traffic_speed[!is.na(traffic_speed$`Gemiddelde snelheid`),]
int_intensity=0
int_speed = 0
traffic_intensity$station = ""
traffic_speed$station = ""
for(id in stations$ID){
traffic_intensity$station[(1+int_intensity):(26+int_intensity)] = id
traffic_speed$station[(1+int_speed):(25+int_speed)] = id
int_intensity = int_intensity+26
int_speed = int_speed + 25
}
traffic_intensity = traffic_intensity[!is.na(traffic_intensity$Intensiteit),]
traffic_intensity = traffic_intensity[traffic_intensity$`uur op de dag` != "uur op de dag",]
traffic_speed = traffic_speed[!is.na(traffic_speed$`Gemiddelde snelheid`),]
traffic_speed = traffic_speed[traffic_speed$`uur op de dag` != "uur op de dag",]
View(traffic_speed)
traffic_stats = merge(traffic_intensity, traffic_speed, by = c("uur op de dag", "station"), all.x = T)
colnames(stations)[2] = "station"
traffic_stats = merge(traffic_stats, stations, by = "station", all.x = T)
colnames(traffic_stats)[c(2,3,10)] = c("hour", "traffic_volume", "mean_traffic_speed")
traffic_stats = traffic_stats[order(traffic_stats$station, traffic_stats$hour),]
traffic_stats$timespan = "01.01.2019-31.12.2019"
traffic_stats$weekdays = "weekdays - Monday to Sunday"
write.csv(traffic_stats, "traffic_stats_jandec2019_weekday.csv")
destination_folder = "C:/Users/Tabea/Documents/PhD EXPANSE/Data/Amsterdam/Built Environment/Traffic/car traffic/jan-dec2019weekday"
setwd(destination_folder)
files = list.files(path = destination_folder, pattern = "*.xlsx", all.files = FALSE,
full.names = FALSE, recursive = FALSE,
ignore.case = FALSE, include.dirs = FALSE, no.. = FALSE)
x = 0
for(file in files){
if(x == 0){
stations = read_excel(file, sheet = 1)
colnames(stations) = stations[5,]
traffic_intensity = read_excel(file, sheet = 2)
colnames(traffic_intensity) = traffic_intensity[4,]
traffic_speed = read_excel(file, sheet = 3)
colnames(traffic_speed) = traffic_speed[4,]
}
else{
stations_new = read_excel(file, sheet = 1)
colnames(stations_new) = stations_new[5,]
traffic_intensity_new = read_excel(file, sheet = 2)
colnames(traffic_intensity_new) = traffic_intensity_new[4,]
traffic_speed_new = read_excel(file, sheet = 3)
colnames(traffic_speed_new) = traffic_speed_new[4,]
stations = rbind(stations, stations_new)
traffic_intensity = rbind(traffic_intensity, traffic_intensity_new)
traffic_speed = rbind(traffic_speed, traffic_speed_new)
}
x=1
}
remove(stations_new, traffic_intensity_new, traffic_speed_new)
#clean the datasets
stations = stations[!is.na(stations$Naam),]
stations = stations[stations$Volgnummer != "Volgnummer",]
traffic_intensity = traffic_intensity[!is.na(traffic_intensity$Intensiteit),]
traffic_speed = traffic_speed[!is.na(traffic_speed$`Gemiddelde snelheid`),]
int_intensity=0
int_speed = 0
traffic_intensity$station = ""
traffic_speed$station = ""
for(id in stations$ID){
traffic_intensity$station[(1+int_intensity):(26+int_intensity)] = id
traffic_speed$station[(1+int_speed):(25+int_speed)] = id
int_intensity = int_intensity+26
int_speed = int_speed + 25
}
traffic_intensity = traffic_intensity[!is.na(traffic_intensity$Intensiteit),]
traffic_intensity = traffic_intensity[traffic_intensity$`uur op de dag` != "uur op de dag",]
traffic_speed = traffic_speed[!is.na(traffic_speed$`Gemiddelde snelheid`),]
traffic_speed = traffic_speed[traffic_speed$`uur op de dag` != "uur op de dag",]
traffic_stats = merge(traffic_intensity, traffic_speed, by = c("uur op de dag", "station"), all.x = T)
colnames(stations)[2] = "station"
traffic_stats = merge(traffic_stats, stations, by = "station", all.x = T)
colnames(traffic_stats)[c(2,3,10)] = c("hour", "traffic_volume", "mean_traffic_speed")
traffic_stats = traffic_stats[order(traffic_stats$station, traffic_stats$hour),]
traffic_stats$timespan = "01.01.2019-31.12.2019"
traffic_stats$weekdays = "weekdays - Monday to Sunday"
View(traffic_stats)
## plot station locations
xy = stations[,c(5,4)]
str(xy)
xy$Lengtegraad = as.numeric(as.character(xy$Lengtegraad))
xy$Breedtegraad = as.numeric(as.character(xy$Breedtegraad))
stations = SpatialPointsDataFrame(coords = xy, data = stations,
proj4string = CRS("+proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0"))
crs = "+init=EPSG:28992" #Amersfoort / RD New
stations = spTransform(stations, CRSobj = crs)
Amsterdam_Roads = readOGR(dsn="C:/Users/Tabea/Documents/PhD EXPANSE/Data/Amsterdam/Built Environment/Transport Infrastructure" ,layer="Amsterdam_roads_RDNew")
plot(Amsterdam_Roads, col = "azure4")
plot(stations, add=T, col = "red")
writeOGR(stations, dsn=destination_folder ,layer= "measurementstations",driver="ESRI Shapefile")
destination_folder = "C:/Users/Tabea/Documents/PhD EXPANSE/Data/Amsterdam/Built Environment/Traffic/car traffic/may19-march2020weekday"
setwd(destination_folder)
files = list.files(path = destination_folder, pattern = "*.xlsx", all.files = FALSE,
full.names = FALSE, recursive = FALSE,
ignore.case = FALSE, include.dirs = FALSE, no.. = FALSE)
x = 0
for(file in files){
if(x == 0){
stations = read_excel(file, sheet = 1)
colnames(stations) = stations[5,]
traffic_intensity = read_excel(file, sheet = 2)
colnames(traffic_intensity) = traffic_intensity[4,]
traffic_speed = read_excel(file, sheet = 3)
colnames(traffic_speed) = traffic_speed[4,]
}
else{
stations_new = read_excel(file, sheet = 1)
colnames(stations_new) = stations_new[5,]
traffic_intensity_new = read_excel(file, sheet = 2)
colnames(traffic_intensity_new) = traffic_intensity_new[4,]
traffic_speed_new = read_excel(file, sheet = 3)
colnames(traffic_speed_new) = traffic_speed_new[4,]
stations = rbind(stations, stations_new)
traffic_intensity = rbind(traffic_intensity, traffic_intensity_new)
traffic_speed = rbind(traffic_speed, traffic_speed_new)
}
x=1
}
remove(stations_new, traffic_intensity_new, traffic_speed_new)
#clean the datasets
stations = stations[!is.na(stations$Naam),]
stations = stations[stations$Volgnummer != "Volgnummer",]
traffic_intensity = traffic_intensity[!is.na(traffic_intensity$Intensiteit),]
traffic_speed = traffic_speed[!is.na(traffic_speed$`Gemiddelde snelheid`),]
int_intensity=0
int_speed = 0
traffic_intensity$station = ""
traffic_speed$station = ""
for(id in stations$ID){
traffic_intensity$station[(1+int_intensity):(26+int_intensity)] = id
traffic_speed$station[(1+int_speed):(25+int_speed)] = id
int_intensity = int_intensity+26
int_speed = int_speed + 25
}
traffic_intensity = traffic_intensity[!is.na(traffic_intensity$Intensiteit),]
traffic_intensity = traffic_intensity[traffic_intensity$`uur op de dag` != "uur op de dag",]
traffic_speed = traffic_speed[!is.na(traffic_speed$`Gemiddelde snelheid`),]
traffic_speed = traffic_speed[traffic_speed$`uur op de dag` != "uur op de dag",]
traffic_stats = merge(traffic_intensity, traffic_speed, by = c("uur op de dag", "station"), all.x = T)
colnames(stations)[2] = "station"
traffic_stats = merge(traffic_stats, stations, by = "station", all.x = T)
colnames(traffic_stats)[c(2,3,10)] = c("hour", "traffic_volume", "mean_traffic_speed")
traffic_stats = traffic_stats[order(traffic_stats$station, traffic_stats$hour),]
traffic_stats$timespan = "01.05.2019-31.3.2020"
traffic_stats$weekdays = "workdays - Monday to Friday"
write.csv(traffic_stats, "traffic_stats_may19mar20_workday.csv")
## plot station locations
xy = stations[,c(5,4)]
str(xy)
xy$Lengtegraad = as.numeric(as.character(xy$Lengtegraad))
xy$Breedtegraad = as.numeric(as.character(xy$Breedtegraad))
stations = SpatialPointsDataFrame(coords = xy, data = stations,
proj4string = CRS("+proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0"))
crs = "+init=EPSG:28992" #Amersfoort / RD New
stations = spTransform(stations, CRSobj = crs)
plot(Amsterdam_Roads, col = "azure4")
plot(stations, add=T, col = "red")
setwd("C:/Users/Tabea/Documents/PhD EXPANSE/Data/Amsterdam/Built Environment/Traffic/bike traffic")
files = list.files(path = "C:/Users/Tabea/Documents/PhD EXPANSE/Data/Amsterdam/Built Environment/Traffic/bike traffic", pattern = "*.csv", all.files = FALSE,
full.names = FALSE, recursive = FALSE,
ignore.case = FALSE, include.dirs = FALSE, no.. = FALSE)
x = 0
for(file in files){
if(x == 0){
fulldata = read.csv(file)
}
else{
data = read.csv(file)
fulldata = rbind(fulldata, data)
}
x=1
}
# clean and prepare data
## remove missing data
fulldata= fulldata[which(!is.na(fulldata$intensiteit_oplopend)),]
Uniq_loc = unique(fulldata$locatiecode)
print(paste("Number of unique locations:" , as.character(length(Uniq_loc))))
destination_folder = "C:/Users/Tabea/Documents/PhD EXPANSE/Data/Amsterdam/Built Environment/Traffic/car traffic/may19-march2020weekday"
setwd(destination_folder)
files = list.files(path = destination_folder, pattern = "*.xlsx", all.files = FALSE,
full.names = FALSE, recursive = FALSE,
ignore.case = FALSE, include.dirs = FALSE, no.. = FALSE)
x = 0
for(file in files){
if(x == 0){
stations = read_excel(file, sheet = 1)
colnames(stations) = stations[5,]
traffic_intensity = read_excel(file, sheet = 2)
colnames(traffic_intensity) = traffic_intensity[4,]
traffic_speed = read_excel(file, sheet = 3)
colnames(traffic_speed) = traffic_speed[4,]
}
else{
stations_new = read_excel(file, sheet = 1)
colnames(stations_new) = stations_new[5,]
traffic_intensity_new = read_excel(file, sheet = 2)
colnames(traffic_intensity_new) = traffic_intensity_new[4,]
traffic_speed_new = read_excel(file, sheet = 3)
colnames(traffic_speed_new) = traffic_speed_new[4,]
stations = rbind(stations, stations_new)
traffic_intensity = rbind(traffic_intensity, traffic_intensity_new)
traffic_speed = rbind(traffic_speed, traffic_speed_new)
}
x=1
}
remove(stations_new, traffic_intensity_new, traffic_speed_new)
#clean the datasets
stations = stations[!is.na(stations$Naam),]
stations = stations[stations$Volgnummer != "Volgnummer",]
traffic_intensity = traffic_intensity[!is.na(traffic_intensity$Intensiteit),]
traffic_speed = traffic_speed[!is.na(traffic_speed$`Gemiddelde snelheid`),]
int_intensity=0
int_speed = 0
traffic_intensity$station = ""
traffic_speed$station = ""
for(id in stations$ID){
traffic_intensity$station[(1+int_intensity):(26+int_intensity)] = id
traffic_speed$station[(1+int_speed):(25+int_speed)] = id
int_intensity = int_intensity+26
int_speed = int_speed + 25
}
traffic_intensity = traffic_intensity[!is.na(traffic_intensity$Intensiteit),]
traffic_intensity = traffic_intensity[traffic_intensity$`uur op de dag` != "uur op de dag",]
traffic_speed = traffic_speed[!is.na(traffic_speed$`Gemiddelde snelheid`),]
traffic_speed = traffic_speed[traffic_speed$`uur op de dag` != "uur op de dag",]
View(traffic_intensity)
int_intensity=0
int_speed = 0
traffic_intensity$station = ""
traffic_speed$station = ""
files = list.files(path = destination_folder, pattern = "*.xlsx", all.files = FALSE,
full.names = FALSE, recursive = FALSE,
ignore.case = FALSE, include.dirs = FALSE, no.. = FALSE)
x = 0
for(file in files){
if(x == 0){
stations = read_excel(file, sheet = 1)
colnames(stations) = stations[5,]
traffic_intensity = read_excel(file, sheet = 2)
colnames(traffic_intensity) = traffic_intensity[4,]
traffic_speed = read_excel(file, sheet = 3)
colnames(traffic_speed) = traffic_speed[4,]
}
else{
stations_new = read_excel(file, sheet = 1)
colnames(stations_new) = stations_new[5,]
traffic_intensity_new = read_excel(file, sheet = 2)
colnames(traffic_intensity_new) = traffic_intensity_new[4,]
traffic_speed_new = read_excel(file, sheet = 3)
colnames(traffic_speed_new) = traffic_speed_new[4,]
stations = rbind(stations, stations_new)
traffic_intensity = rbind(traffic_intensity, traffic_intensity_new)
traffic_speed = rbind(traffic_speed, traffic_speed_new)
}
x=1
}
View(traffic_intensity_new)
View(traffic_speed_new)
files = list.files(path = destination_folder, pattern = "*.xlsx", all.files = FALSE,
full.names = FALSE, recursive = FALSE,
ignore.case = FALSE, include.dirs = FALSE, no.. = FALSE)
x = 0
for(file in files){
if(x == 0){
stations = read_excel(file, sheet = 1)
stat_colnames = stations[5,]
colnames(stations) = stat_colnames
traffic_intensity = read_excel(file, sheet = 2)
intens_colnames = traffic_intensity[4,]
colnames(traffic_intensity) = intens_colnames
traffic_speed = read_excel(file, sheet = 3)
speed_colnames = traffic_speed[4,]
colnames(traffic_speed) = speed_colnames
}
else{
stations_new = read_excel(file, sheet = 1)
colnames(stations_new) = stat_colnames
traffic_intensity_new = read_excel(file, sheet = 2)
colnames(traffic_intensity_new) = intens_colnames
traffic_speed_new = read_excel(file, sheet = 3)
colnames(traffic_speed_new) = speed_colnames
stations = rbind(stations, stations_new)
traffic_intensity = rbind(traffic_intensity, traffic_intensity_new)
traffic_speed = rbind(traffic_speed, traffic_speed_new)
}
x=1
}
View(traffic_speed)
View(traffic_speed_new)
setwd("C:\Users\Tabea\Documents\PhD EXPANSE\Written Paper\02- Behavioural Model paper")
setwd("C:/Users/Tabea/Documents/PhD EXPANSE/Written Paper/02- Behavioural Model paper")
evidence = read.csv("unique_evidence_instances_clean2_harmonised_BO")
evidence = read.csv("unique_evidence_instances_clean2_harmonised_BO.csv")
View(evidence)
unique(evidence$BehaviorOption)
walking_determ = evidence[which(evidence$BehaviorOption == "walking"),]
biking_determ = evidence[which(evidence$BehaviorOption == "biking"),]
driving_determ = evidence[which(evidence$BehaviorOption == "driving"),]
View(driving_determ)
evidence = read.csv("unique_evidence_instances_clean2_harmonised_BO_manualclean.csv")
unique(evidence$BehaviorOption)
walking_determ = evidence[which(evidence$BehaviorOption == "walking"),]
biking_determ = evidence[which(evidence$BehaviorOption == "biking"),]
driving_determ = evidence[which(evidence$BehaviorOption == "driving"),]
View(driving_determ)
unique(driving_determ$BehaviorDeterminant)
biking_determ = evidence[which(evidence$BehaviorOption == "biking"),]
View(biking_determ)
print(biking_determ[c("Fullsentence", "BehaviorDeterminant"), ])
print(biking_determ[, c("Fullsentence", "BehaviorDeterminant")])
unique(biking_determ$BehaviorDeterminant)
View(walking_determ)
unique(walking_determ$BehaviorDeterminant)
print(walking_determ[, c("Fullsentence", "BehaviorDeterminant")])
for(i in 1:nrow(walking_determ)){
print(walking_determ[i, c("Fullsentence", "BehaviorDeterminant", "significance")])
}
for(i in 1:nrow(walking_determ)){
print(walking_determ[i, c("Fullsentence", "BehaviorDeterminant", "stat_significance")])
}
for(i in 1:30){
print(walking_determ[i, c("Fullsentence", "BehaviorDeterminant", "stat_significance")])
}
print("aghwqdge3i2f")
for(i in 1:20){
print(walking_determ[i, c("Fullsentence", "BehaviorDeterminant", "stat_significance")])
}
for(i in 1:20){
print(walking_determ[i, c("Fullsentence", "BehaviorDeterminant", "stat_significance")])
}
for(i in 20:40){
print(walking_determ[i, c("Fullsentence", "BehaviorDeterminant", "stat_significance")])
}
for(i in 20:40){
print(walking_determ[i, c("Fullsentence", "BehaviorDeterminant", "stat_significance")])
}
for(i in 40:60){
print(walking_determ[i, c("Fullsentence", "BehaviorDeterminant", "stat_significance")])
}
for(i in 40:60){
print(walking_determ[i, c("Fullsentence", "BehaviorDeterminant", "stat_significance")])
}
write.csv(walking_determ, "walkingdeterm.csv")
walking_determ_clean = read.csv("walkingdeterm.csv")
unique(walking_determ_clean$BehaviorDeterminant)
sort(unique(walking_determ_clean$BehaviorDeterminant))
install.packages("multiplex")
library("multiplex")
read.gml("D:\bgt_wegdeel.xml", as = "srt", directed = TRUE, coords = TRUE)
read.gml("D:/bgt_wegdeel.xml", as = "srt", directed = TRUE, coords = TRUE)
x = read.gml("D:/bgt_wegdeel.xml", as = "srt", directed = TRUE, coords = TRUE)
library("st")
x = read.gml("D:/bgt_wegdeel.gml", as = "srt", directed = TRUE, coords = TRUE)
library("sf")
x = st_read("D:/", "bgt_wegdeel.gml")
x = st_read("D:/", "bgt_wegdeel.xml")
x = st_read("D:/", "bgt_spoor.xml")
setwd("D:/")
x = st_read("bgt_spoor.xml")
View(x)
x = st_read("bgt_wegdeel.xml")
View(x)
pedway = x[which(x$function. %in% c("voetpad", "voetgangersgebied")),]
View(pedway)
library("sp")
?SpatialPolygonsDataFrame
pedway_sp = SpatialPolygonsDataFrame(pedway$geometry, pedway)
pedway_sp = pedway$geometry
View(pedway_sp)
View(pedway_sp)
pedway_sp = SpatialPolygons(pedway_sp)
View(pedway_sp)
pedway_sp = as_Spatial(pedway_sp, pedway)
?as_Spatial
pedway_sp = as_Spatial(pedway_sp, cast = TRUE, IDs = pedway$gml_id)
install.packages("XML")
library("XML")
saveXML(pedway, file="pedway.xml")
st_write(pedway, "D:/", "pedway.shp")
st_write(obj= pedway, dsn="D:/", layer= "pedway.shp")
st_write(obj= pedway, dsn="C:/Users/Tabea/Documents/PhD EXPANSE/Data/Amsterdam/Built Environment/Transport Infrastructure/pedestrian", layer= "pedway.shp")
st_write(obj= pedway, driver= "ESRI Shapefile", dsn="C:/Users/Tabea/Documents/PhD EXPANSE/Data/Amsterdam/Built Environment/Transport Infrastructure/pedestrian", layer= "pedway.shp")
