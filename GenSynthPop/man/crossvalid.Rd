% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/validating_distribution.R
\name{crossvalid}
\alias{crossvalid}
\title{Cross validation with the neighborhood and stratified marginal distributions}
\usage{
crossvalid(
  valid_df,
  agent_df,
  join_var,
  list_valid_var,
  agent_var,
  list_agent_attr
)
}
\arguments{
\item{valid_df}{the dataset that contains the marginal distributions, this can be the neighborhood totals dataset or the stratified dataset}

\item{agent_df}{is the agent dataset, which now contains the newly generated variable}

\item{join_var}{is the variable or variables on which basis the datasets should be joined/ compared. For a neighborhood totals dataset this would be the neighborhood code, while for a stratified dataset this would be all the conditional variables.}

\item{list_valid_var}{lists the variables in the valid_df that should be compared to the newly generated variable.(e.g when having generated the variable sex, then the variables we want to compare would be perhaps c("men", "women", "non_binary"))}

\item{agent_var}{states the newly generated variable in the agent_df that should be validated}

\item{list_agent_attr}{lists the generated attributes of this agent_var (e.g. c("male", "female", "non_binary")). Attention: the order of the list_valid_var and list_agent_attr needs to be equal.}
}
\value{
orginal distribution dataset, agent distribution and difference
}
\description{
This function generates a table for validation that compares the original marginal distributions to the generated distributions of the agent dataset. valid_df is the dataset that contains the marginal distributions, this can be the neighborhood totals dataset or the stratified dataset; agent_df is the agent dataset, which now contains the newly generated variable join_var is the variable or variables on which basis the datasets should be joined/ compared. For a neighborhood totals dataset this would be the neighborhood code, while for a stratified dataset this would be all the conditional variables. list_valid_var lists the variables in the valid_df that should be compared to the newly generated variable. (e.g when having generated the variable sex, then the variables we want to compare would be perhaps c("men", "women", "non_binary")). agent_var states the newly generated variable in the agent_df that should be validated list_agent_attr lists the generated attributes of this agent_var (e.g. c("male", "female", "non_binary")).    Attention: the order of the list_valid_var and list_agent_attr needs to be equal.
}
