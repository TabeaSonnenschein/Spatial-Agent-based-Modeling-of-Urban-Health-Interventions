% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/distr_attributes.R
\name{distr_bin_attr_strat_n_neigh_stats}
\alias{distr_bin_attr_strat_n_neigh_stats}
\title{Distributing attributes across agent population based on conditional proabilities and neighborhood totals for binary attributes}
\usage{
distr_bin_attr_strat_n_neigh_stats(
  agent_df,
  neigh_df,
  neigh_ID,
  variable,
  list_var_classes_neigh_df,
  list_agent_propens,
  list_class_names,
  agent_exclude
)
}
\arguments{
\item{agent_df}{Dataframe of the unique agents with their attributes}

\item{neigh_df}{Dataframe of aggregate statistical data per neighborhood, specifically the total population per neighborhood and the counts per variable class.}

\item{neigh_ID}{the columnname that indicates the neighborhood ID in both the agent and neighborhood dataframe}

\item{variable}{the new variable that we want to add based on the stratified and neighborhood marginal distributions}

\item{list_var_classes_neigh_df}{a list of the column names in the Neighborhood dataset with the classes of the variable that will be modeled (e.g. c("Men", "Women", "Non-Binary"), which are the classes of sex).}

\item{list_agent_propens}{A list of the columns in the agent dataset that contain the propensities for the classes of the variable based on the other agents conditional attributes. This list has to be in the same order as the list_var_classes_neigh_df. Since we are dealing with a binary attribute, we can leave out the last propensity as it is 1 minus the other propensities.}

\item{list_class_names}{The list_class_names is optional and contains the values that the new created agent variable should have for the different variable classes. It has to be in the same order and of the same length as the list_var_classes_neigh_df. If left empty, the list_var_classes_neigh_df will become the default values for the classes.}

\item{agent_exclude}{an optional variable containing one or multiple variable names of the agent dataset on which basis agents should be excluded from the attribute assignment. These variables whould be binary columns, with 1 indicating that it should be excluded (e.g. "is_child" could be entered if agents with is_child = 1 should be exluded for the new attribute).}
}
\value{
returns the agent df with the newly distributed attribute and the random score, which is used to see if it is below or above the propensity.
}
\description{
This function distributes attribute classes in the agent population based on the conditional propensities and the neighborhood statistics. It uses random scores and sees if the score is below the propensity, in which case the first attribute is assigned, if above the second attribute is assigned. Consequently, the attribute distribution in each neighborhood will be compared to the respective neighborhood's totals. If the distribution is not equal to the neighborhood distributions or has an absolute difference more than one person or 2\%, then first random scores will be assigned again, seeing if it results in a fitting distribution. If that does not work then the propensities of the number of agents equal to the rounded absolute difference of distribution in the neighborhood will be adjusted in the direction of the difference. This happens iteratively with assigning the attribute by setting the propensity in relation to the random score until the desired distribution is achieved.
}
