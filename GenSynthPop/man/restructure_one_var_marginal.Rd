% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/data_preparation.R
\name{restructure_one_var_marginal}
\alias{restructure_one_var_marginal}
\title{Restructures a single-sided stratified dataframe so that the classes of one column/variable of interest are seperate columns}
\usage{
restructure_one_var_marginal(df, variable, countsname)
}
\arguments{
\item{df}{The original stratified dataframe with all varable combinations as columns on the left side.}

\item{variable}{The variable of interest, for which on wants to generate seperate columns of the subclasses.}

\item{countsname}{The columnname of the column in the original datafram, which indicates the counts for all variable combinations.}
}
\value{
the output will be a dataframe of all variable combinations excluding the variable of interest and the marginal distributions of the variable combinations along the classes of the variable of interest.
}
\description{
This function takes a single-sided stratified dataframe, such as the output of the crosstabular_to_singleside_df function and restructures it as such that the unique classes of one variable of interest (any of the variablecolumns), will become seperate columns. Hence the output will be a dataframe of all variable combinations excluding the variable of interest and the marginal distributions of the variable combinations along the classes of the variable of interest.
}
\examples{
## generating some example mock data ##
# stratified dataframe mock data, can be output of function: crosstabular_to_singleside_df
age_group = c("A1", "A2", "A3", "A4", "A1", "A2", "A3", "A4", "A1", "A2", "A3", "A4", "A1", "A2", "A3", "A4", "A1", "A2", "A3", "A4", "A1", "A2", "A3", "A4")
sex = c("male","male","male","male", "female","female","female","female", "non-binary", "non-binary", "non-binary","non-binary", "male","male","male","male", "female","female","female","female", "non-binary", "non-binary", "non-binary","non-binary")
employ_status = c("employed", "employed", "employed", "employed", "employed", "employed", "employed", "employed", "employed", "employed", "employed", "employed", "unemployed", "unemployed", "unemployed", "unemployed", "unemployed", "unemployed", "unemployed", "unemployed", "unemployed", "unemployed", "unemployed", "unemployed")
counts = sample(1:400,length(age_group))
singleside_stratified_df = data.frame(age_group, sex , employ_status, counts)

# function application
one_var_marginal_df = restructure_one_var_marginal(singleside_stratified_df, "employ_status", "counts")
print(one_var_marginal_df)

}
